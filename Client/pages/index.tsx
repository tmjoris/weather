import Head from 'next/head';
import Image from 'next/image';
import { useState } from 'react';
import { BsSearch } from 'react-icons/bs';
import Weather from '@/components/WeatherCard';
import Spinner from '@/components/Spinner';
import { fetchWeather } from '@/utils/fetchWeather';
import { WeatherData } from '@/types/Weather';

export default function Home() {
  const [city, setCity] = useState('');
  const [weather, setWeather] = useState<WeatherData | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [units, setUnits] = useState<'metric' | 'imperial'>('imperial');


  const handleFetchWeather = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!city.trim()) return;

    setLoading(true);
    setError(null);
    try {
      const data = await fetchWeather(city, 'imperial');
      setWeather(data);
    } catch (err) {
      console.error(err);
      setError('Failed to fetch weather');
    } finally {
      setLoading(false);
      setCity('');
    }
  };

  if (loading) {
    return <Spinner />;
  } else {
    return (
      <div>
        <Head>
          <title>Weather App</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        {/* Overlay */}
        <div className='absolute top-0 left-0 right-0 bottom-0 bg-black/40 z-[1]' />

        {/* Background image */}
        <Image
          src='https://images.unsplash.com/photo-1601134467661-3d775b999c8b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2575&q=80'
          alt='weather background image'
          fill
          className='object-cover'
        />

        {/* Search */}
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 px-4 text-white z-10'>
          <form
            onSubmit={handleFetchWeather}
            className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl'
          >
            <div>
              <input
                onChange={(e) => setCity(e.target.value)}
                className='bg-transparent border-none text-white focus:outline-none text-2xl'
                type='text'
                placeholder='Search city'
              />
            </div>

            <select
                value={units}
                onChange={(e) => setUnits(e.target.value as 'metric' | 'imperial')}
                className="ml-2 p-1 rounded bg-white text-black"
                >
                <option value="imperial">Imperial (°F, mph)</option>
                <option value="metric">Metric (°C, m/s)</option>
            </select>


            <button onClick={async (e) =>{
                e.preventDefault();
                try {
                    const data = await fetchWeather(city, units);
                    setWeather(data);
                } catch {
                    setError('Failed to fetch weather');
                }
            }}
            >
              <BsSearch size={20} />
            </button>
          </form>
        </div>

        {/* Weather */}
        {weather && weather.main && <Weather data={weather} units={units}/>}
      </div>
    );
  }
}

